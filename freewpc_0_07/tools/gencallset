#!/usr/bin/perl
#
# Copyright 2006 by Brian Dominy <brian@oddchange.com>
#
# This file is part of FreeWPC.
#
# FreeWPC is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# FreeWPC is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with FreeWPC; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
# ------------------------------------------------------------------
# gencallset - generate function call lists automatically
# ------------------------------------------------------------------
#
# Scan all source files recursively and grep them for
# defines that match a particular pattern.  For each
# one, treat as a function call and generate a call to it.
#


my @dirs = ("kernel", "common", "mach", "fonts");


my @functions = ();

my %functionhash;

while ($arg = shift)
{
}

foreach $dir (@dirs) {
	my @files = split /\n+/, 
		`cd $dir && find . -name "*.c" -or -name "*.h"`;
	foreach $file (@files) {
		push @srclist, "$dir/" . $file;
	}
}

foreach $src (@srclist) {
	open FH, $src;
	while (<FH>) {
		chomp;
		if (/CALLSET_ENTRY[ \t]*\((.*)\)/) {
			my $callset_entry_args = $1;
			my ($module, $set) = split /, */, $callset_entry_args;
			next if (!defined $module or !defined $set);
			print "Found $module + $set\n";
			if (!defined $functionhash{$set}) {
				$functionhash{$set} = "";
			}
			$functionhash{$set} .= "$module ";
		}
		elsif (/#include <([^.]*)\.callset>/) {
			print "Callset '$1' invoked\n";
			if (!defined $functionhash{$1}) {
				$functionhash{$1} = "";
			}
		}
	}
	close FH;
}

foreach $set (keys %functionhash) {
	open FH, ">callset/$set.callset";
	my @modules = split " ", $functionhash{$set};
	foreach $module (@modules) {
		print FH "extern void ${module}_$set (void);\n";
		print FH "${module}_$set ();\n";
	}
	close FH;
}

