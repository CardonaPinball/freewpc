#!/bin/sh
#
# svn branch related commands:
#

# create a new branch
# 1. svn copy <trunk_url> <dest_url>
# 2. In a working copy of the trunk, do svnmerge init <dest_url>
# 3. Commit the svnmerge change: svn ci -F svnmerge-commit-message.txt; rm -f svnmerge-commit-message.txt
# 4. In a working copy of the branch, do svnmerge init
# 5. Repeat step 3 as before, this time in the branch directory.

# merge from trunk -> branch (rebase)
# In the branch WC, do svnmerge merge.

# merge from branch -> trunk (deliver)
# In the trunk WC, do svnmerge merge --bidirectional -S <branch_name>

################ WARNING : this script is experimental!!!!! ##################
###
### The intent is to run this from the top-level of a _branch_ (e.g.
### branches/xxx).  It will assume that you also have a working copy
### of the trunk if merging TO the trunk.
###

commit()
{
	echo "Committing changes..."
	#svn ci -F svnmerge-commit-message.txt
	#rm -f svnmerge-commit-message.txt
	return $?
}

revert()
{
	echo "Reverting changes..."
	#svn revert -R .
	return $?
}

branch=`basename $PWD`
echo "Current branch : ${branch}"
if [ "$branch" = "trunk" ]; then
	echo "error: svnbra must be run from the root of a branch, not the trunk"
	exit 1
fi

direction=$1; shift
command=$1; shift
rest=$*

case $direction in
	up)
		echo "Merging up... (from branch '$branch' into trunk)"
		cd ../../trunk
		options="-b -S ${branch}"
		;;
	down)
		echo "Merging down... (from trunk into branch '$branch')"
		options="-S trunk"
		;;
	new)
		echo "Creating new branch... TBD"
		;;
	help|*)
		echo "Syntax: tools/svnbra [up|down] [preview|start|complete] [<revlist>]"
		exit 0
		;;
esac
echo "Directory:   $PWD"

case $command in
	start)
		cmd="merge ${rest}"
		;;

	complete)
		commit
		exit $?
		;;

	preview|*)
		cmd="avail --log ${rest}"
		;;
esac

echo "Command:     svnmerge ${cmd} ${options} ..."
echo "Press ENTER."
read akey
svnmerge ${cmd} ${options}
exit $?

