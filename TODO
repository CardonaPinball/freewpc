
=========================================================================
	Implement a strategy for far code/data
=========================================================================

Use GCC's attribute mechanism to attach a "section" name to each
declaration.  For example,

void far_function (void) __attribute__ ((__section__("far")) ...

would declare far_function to go into a section named "far":

.area far
...

Every function and variable has a default section name; this attribute
can be used to override the default.

The linker must know where to put each section in the final output image.

The code generator for function calls and data accesses can be modified
to compare the "current section" (based on the attribute of the current
function) and the "target section" (the called function or accessed
variable), and to generate appropriate code to handle this.

