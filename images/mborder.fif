#include <freewpc.h>
#include <xbmprog.h>

/* vi: set filetype=c: Automatically generated by fiftool */

const U8 fif_mborder[] = {
   0x02, /* format */
   XBMPROG_METHOD_RLE, XBMPROG_RLE_REPEAT, 0xFF, 16, 0x01, XBMPROG_RLE_SKIP, 14, 0x80, 0xFD, XBMPROG_RLE_REPEAT, 0xFF, 14, 0xBF, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0x05, XBMPROG_RLE_SKIP, 14, 0xA0, 0xFD, XBMPROG_RLE_REPEAT, 0xFF, 14, 0xBF, 0x01, XBMPROG_RLE_SKIP, 14, 0x80, XBMPROG_RLE_REPEAT, 0xFF, 16, 
   XBMPROG_METHOD_RLE, XBMPROG_RLE_REPEAT, 0xFF, 32, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, 0x03, XBMPROG_RLE_SKIP, 14, 0xC0, XBMPROG_RLE_REPEAT, 0xFF, 32, 
};
